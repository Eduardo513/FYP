{
  "_args": [
    [
      {
        "raw": "rxjs@alpha",
        "scope": null,
        "escapedName": "rxjs",
        "name": "rxjs",
        "rawSpec": "alpha",
        "spec": "alpha",
        "type": "tag"
      },
      "C:\\meanauthapp"
    ]
  ],
  "_from": "rxjs@alpha",
  "_id": "rxjs@6.0.0-alpha.3",
  "_inCache": true,
  "_location": "/rxjs",
  "_nodeVersion": "7.7.2",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/rxjs_6.0.0-alpha.3_1518196017801_0.7902506265749623"
  },
  "_npmUser": {
    "name": "blesh",
    "email": "ben@benlesh.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "rxjs@alpha",
    "scope": null,
    "escapedName": "rxjs",
    "name": "rxjs",
    "rawSpec": "alpha",
    "spec": "alpha",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/rxjs/-/rxjs-6.0.0-alpha.3.tgz",
  "_shasum": "fcce7ffcaa7c6c2cfacec23aa58a3c900c2b8148",
  "_shrinkwrap": null,
  "_spec": "rxjs@alpha",
  "_where": "C:\\meanauthapp",
  "author": {
    "name": "Ben Lesh",
    "email": "ben@benlesh.com"
  },
  "bugs": {
    "url": "https://github.com/ReactiveX/RxJS/issues"
  },
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  },
  "contributors": [
    {
      "name": "Ben Lesh",
      "email": "ben@benlesh.com"
    },
    {
      "name": "Paul Taylor",
      "email": "paul.e.taylor@me.com"
    },
    {
      "name": "Jeff Cross",
      "email": "crossj@google.com"
    },
    {
      "name": "Matthew Podwysocki",
      "email": "matthewp@microsoft.com"
    },
    {
      "name": "OJ Kwon",
      "email": "kwon.ohjoong@gmail.com"
    },
    {
      "name": "Andre Staltz",
      "email": "andre@staltz.com"
    }
  ],
  "dependencies": {},
  "description": "Reactive Extensions for modern JavaScript",
  "devDependencies": {
    "@angular-devkit/build-optimizer": "0.0.24",
    "@types/chai": "^4.0.4",
    "@types/lodash": "^4.14.80",
    "@types/mocha": "^2.2.44",
    "@types/node": "^8.0.47",
    "@types/sinon": "^2.3.7",
    "@types/sinon-chai": "^2.7.29",
    "babel-polyfill": "^6.23.0",
    "benchmark": "^2.1.0",
    "benchpress": "2.0.0-beta.1",
    "chai": "^3.5.0",
    "color": "^0.11.1",
    "colors": "1.1.2",
    "commitizen": "^2.8.6",
    "coveralls": "^2.11.13",
    "cross-env": "^5.1.0",
    "cz-conventional-changelog": "^1.2.0",
    "danger": "^1.1.0",
    "dependency-cruiser": "2.10.1",
    "doctoc": "^1.0.0",
    "escape-string-regexp": "^1.0.5 ",
    "esdoc": "^0.4.7",
    "eslint": "^3.8.0",
    "fs-extra": "^2.1.2",
    "get-folder-size": "^1.0.0",
    "glob": "^7.0.3",
    "gm": "^1.22.0",
    "google-closure-compiler-js": "^20170218.0.0",
    "gzip-size": "^3.0.0",
    "http-server": "^0.9.0",
    "husky": "^0.13.3",
    "klaw-sync": "^3.0.0",
    "lint-staged": "3.2.5",
    "lodash": "^4.15.0",
    "madge": "^1.4.3",
    "markdown-doctest": "^0.9.1",
    "minimist": "^1.2.0",
    "mkdirp": "^0.5.1",
    "mocha": "^3.0.2",
    "mocha-in-sauce": "0.0.1",
    "npm-run-all": "^4.0.2",
    "npm-scripts-info": "^0.3.4",
    "nyc": "^11.3.0",
    "opn-cli": "^3.1.0",
    "platform": "^1.3.1",
    "promise": "^7.1.1",
    "protractor": "^3.1.1",
    "rollup": "0.36.3",
    "rollup-plugin-inject": "^2.0.0",
    "rollup-plugin-node-resolve": "^2.0.0",
    "rx": "latest",
    "rxjs": "latest",
    "shx": "^0.2.2",
    "sinon": "^2.1.0",
    "sinon-chai": "^2.9.0",
    "source-map-support": "^0.4.0",
    "symbol-observable": "^1.0.1",
    "ts-node": "^3.3.0",
    "tslib": "^1.5.0",
    "tslint": "^4.4.2",
    "typescript": "latest",
    "validate-commit-msg": "^2.14.0",
    "watch": "^1.0.1",
    "webpack": "^1.13.1",
    "xmlhttprequest": "1.8.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-EuiyMoysmRo4ZVNh1LMr4B/0A7kcvlH4a7pcRSLY9qTXLA5xRwaaflH84PyMbFYfSG5GHxedrKAFjtf503mcBg==",
    "shasum": "fcce7ffcaa7c6c2cfacec23aa58a3c900c2b8148",
    "tarball": "https://registry.npmjs.org/rxjs/-/rxjs-6.0.0-alpha.3.tgz",
    "fileCount": 3591,
    "unpackedSize": 7844497
  },
  "engines": {
    "npm": ">=2.0.0"
  },
  "homepage": "https://github.com/ReactiveX/RxJS",
  "keywords": [
    "Rx",
    "RxJS",
    "ReactiveX",
    "ReactiveExtensions",
    "Streams",
    "Observables",
    "Observable",
    "Stream",
    "ES6",
    "ES2015"
  ],
  "license": "Apache-2.0",
  "lint-staged": {
    "*.@(js)": [
      "eslint --fix",
      "git add"
    ],
    "*.@(ts)": [
      "tslint --fix",
      "git add"
    ]
  },
  "main": "./Rx.js",
  "maintainers": [
    {
      "name": "blesh",
      "email": "ben@benlesh.com"
    }
  ],
  "name": "rxjs",
  "nyc": {
    "include": [
      "src/*.ts",
      "src/**/*.ts"
    ],
    "exclude": [
      "node_modules",
      "dist",
      "*.d.ts",
      "src/**/MiscJSDoc.ts"
    ],
    "extension": [
      ".ts"
    ],
    "require": [
      "ts-node/register"
    ],
    "reporter": [
      "html"
    ],
    "all": true
  },
  "optionalDependencies": {},
  "readme": "[![Build Status](https://travis-ci.org/ReactiveX/rxjs.svg?branch=master)](https://travis-ci.org/ReactiveX/rxjs)\n[![Coverage Status](https://coveralls.io/repos/github/ReactiveX/rxjs/badge.svg?branch=master)](https://coveralls.io/github/ReactiveX/rxjs?branch=master)\n[![npm version](https://badge.fury.io/js/%40reactivex%2Frxjs.svg)](http://badge.fury.io/js/%40reactivex%2Frxjs)\n[![Join the chat at https://gitter.im/Reactive-Extensions/RxJS](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/Reactive-Extensions/RxJS?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n[![Selenium Test Status](https://saucelabs.com/browser-matrix/rxjs5.svg)](https://saucelabs.com/u/rxjs5)\n\n# RxJS 6 Alpha\n\n## FOR V 5.X PLEASE GO TO [STABLE BRANCH](https://github.com/ReactiveX/rxjs/tree/stable)\n\nReactive Extensions Library for JavaScript. This is a rewrite of [Reactive-Extensions/RxJS](https://github.com/Reactive-Extensions/RxJS) and is the latest production-ready version of RxJS. This rewrite is meant to have better performance, better modularity, better debuggable call stacks, while staying mostly backwards compatible, with some breaking changes that reduce the API surface.\n\n[Apache 2.0 License](LICENSE.txt)\n\n- [Code of Conduct](CODE_OF_CONDUCT.md)\n- [Contribution Guidelines](CONTRIBUTING.md)\n- [Maintainer Guidelines](doc/maintainer-guidelines.md)\n- [Creating Operators](doc/operator-creation.md)\n- [API Documentation (WIP)](http://reactivex.io/rxjs)\n\n## Versions In This Repository\n\n- [master](https://github.com/ReactiveX/rxjs/commits/master) - commits that will be included in the next _major_ release (breaking changes)\n- [next](https://github.com/ReactiveX/rxjs/commits/stable) - commits that will be included in the next _minor_ or _patch_ release\n\nMost PRs should be made to **master**, unless you know it is a breaking change.\n\n## Important\n\nBy contributing or commenting on issues in this repository, whether you've read them or not, you're agreeing to the [Contributor Code of Conduct](CODE_OF_CONDUCT.md). Much like traffic laws, ignorance doesn't grant you immunity.\n\n## Installation and Usage\n\n### ES6 via npm\n\n```sh\nnpm install rxjs@alpha\n```\n\nTo import the entire core set of functionality:\n\n```js\nimport Rx from 'rxjs/Rx';\n\nRx.Observable.of(1,2,3)\n```\n\nTo import only what you need by patching (this is useful for size-sensitive bundling):\n\n```js\nimport { Observable, Subject, ReplaySubject } from 'rxjs';\nimport { from, of, range } from 'rxjs/create';\nimport { map, filter, switchMap } from 'rxjs/operators';\n\nrange(1, 200)\n  .pipe(filter(x => x % 2 === 1), map(x => x + x))\n  .subscribe(x => console.log(x));\n```\n\n### CommonJS via npm\n\nTo install this library for CommonJS (CJS) usage, use the following command:\n\n```sh\nnpm install rxjs@alpha\n```\n\n(Note: destructuring available in Node 8+)\n\n```js\nconst { Observable, Subject, ReplaySubject } = require('rxjs');\nconst { from, of, range } = require('rxjs/create');\nconst { map, filter, switchMap } = require('rxjs/operators');\n\nrange(1, 200)\n  .pipe(filter(x => x % 2 === 1), map(x => x + x))\n  .subscribe(x => console.log(x));\n```\n\n### CDN\n\nFor CDN, you can use [unpkg](https://unpkg.com/):\n\nhttps://unpkg.com/rxjs/bundles/Rx.min.js\n\n#### Node.js Usage:\n\n```js\nvar Rx = require('@reactivex/rxjs');\n\nRx.Observable.of('hello world')\n  .subscribe(function(x) { console.log(x); });\n```\n\n## Goals\n\n- Smaller overall bundles sizes\n- Provide better performance than preceding versions of RxJS\n- To model/follow the [Observable Spec Proposal](https://github.com/zenparsing/es-observable) to the observable.\n- Provide more modular file structure in a variety of formats\n- Provide more debuggable call stacks than preceding versions of RxJS\n\n## Building/Testing\n\n- `npm run build_all` - builds everything\n- `npm test` - runs tests\n\n`npm run info` will list available scripts (there are a lot LOL)\n\n## Performance Tests\n\nRun `npm run build_perf` or `npm run perf` to run the performance tests with `protractor`.\n\nRun `npm run perf_micro [operator]` to run micro performance test benchmarking operator.\n\n## Adding documentation\nRxNext uses [ESDoc](https://esdoc.org/) to generate API documentation. Refer to ESDoc's documentation for syntax. Run `npm run build_docs` to generate.\n\nAt the moment we are trying to improve the documentation. For this purpose the Documentation is in a seperate [GitHub Repostory](https://github.com/ReactiveX/rxjs-docs).\nFor a quick instruction take a look at the [documentation guidelines](https://github.com/ReactiveX/rxjs-docs/blob/master/DOCUMENTATION_GUIDELINES.md).\nWe are really happy about any type of contributions! \n\n## Generating PNG marble diagrams\n\nThe script `npm run tests2png` requires some native packages installed locally: `imagemagick`, `graphicsmagick`, and `ghostscript`.\n\nFor Mac OS X with [Homebrew](http://brew.sh/):\n\n- `brew install imagemagick`\n- `brew install graphicsmagick`\n- `brew install ghostscript`\n- You may need to install the Ghostscript fonts manually:\n  - Download the tarball from the [gs-fonts project](https://sourceforge.net/projects/gs-fonts)\n  - `mkdir -p /usr/local/share/ghostscript && tar zxvf /path/to/ghostscript-fonts.tar.gz -C /usr/local/share/ghostscript`\n\nFor Debian Linux:\n\n- `sudo add-apt-repository ppa:dhor/myway`\n- `apt-get install imagemagick`\n- `apt-get install graphicsmagick`\n- `apt-get install ghostscript`\n\nFor Windows and other Operating Systems, check the download instructions here:\n\n- http://imagemagick.org\n- http://www.graphicsmagick.org\n- http://www.ghostscript.com/\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/ReactiveX/RxJS.git"
  },
  "scripts-info": {
    "info": "List available script",
    "build_all": "Build all packages (ES6, CJS, UMD) and generate packages",
    "build_cjs": "Build CJS package with clean up existing build",
    "build_esm5": "Build ESM/ES5 package with clean up existing build",
    "build_esm2015": "Build ESM/ES2015 package with clean up existing build",
    "build_closure_core": "Minify Global core build using closure compiler",
    "build_global": "Build Global package, then minify build",
    "build_perf": "Build CJS & Global build, run macro performance test",
    "build_docs": "Build ESM2015 & global package, create documentation using it",
    "clean_dist_cjs": "Clean up existing CJS package output",
    "clean_dist_esm5": "Clean up existing ESM/ES5 package output",
    "clean_dist_esm2015": "Clean up existing ESM/ES2015 package output",
    "clean_dist_global": "Clean up existing Global package output",
    "commit": "Run git commit wizard",
    "compile_dist_cjs": "Compile codebase into CJS module",
    "compile_module_esm5": "Compile codebase into ESM/ES5",
    "compile_dist_esm2015": "Compile codebase into ESM/ES2015",
    "lint_perf": "Run lint against performance test suite",
    "lint_spec": "Run lint against test spec",
    "lint_src": "Run lint against source",
    "lint": "Run lint against everything",
    "perf": "Run macro performance benchmark",
    "perf_micro": "Run micro performance benchmark",
    "test_browser": "Execute mocha test runner on browser against existing test spec build",
    "test": "Execute mocha test runner",
    "test:cover": "Execute test coverage",
    "tests2png": "Generate marble diagram image from test spec",
    "watch": "Watch codebase, trigger compile when source code changes"
  },
  "typings": "./Rx.d.ts",
  "version": "6.0.0-alpha.3"
}
